// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// xml service
//
// Command:
// $ goa gen goa.design/examples/encodings/design

package xml

import (
	"context"
)

// An xml service that converts an XML payload into a JSON object.
type Service interface {
	// Convert implements convert.
	Convert(context.Context, *ConvertPayload) (res *JSONObject, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "xml"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"convert"}

// ConvertPayload is the payload type of the xml service convert method.
type ConvertPayload struct {
	// The name
	Name *string `xml:"Name,omitempty"`
	// The description
	Description *string `xml:"Description,omitempty"`
}

// JSONObject is the result type of the xml service convert method.
type JSONObject struct {
	Name        *string
	Description *string
}
