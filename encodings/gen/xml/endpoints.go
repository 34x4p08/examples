// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// xml endpoints
//
// Command:
// $ goa gen goa.design/examples/encodings/design

package xml

import (
	"context"

	goa "goa.design/goa"
)

// Endpoints wraps the "xml" service endpoints.
type Endpoints struct {
	Convert goa.Endpoint
}

// NewEndpoints wraps the methods of the "xml" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Convert: NewConvertEndpoint(s),
	}
}

// Use applies the given middleware to all the "xml" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Convert = m(e.Convert)
}

// NewConvertEndpoint returns an endpoint function that calls the method
// "convert" of service "xml".
func NewConvertEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ConvertPayload)
		return s.Convert(ctx, p)
	}
}
