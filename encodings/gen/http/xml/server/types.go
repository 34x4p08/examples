// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// xml HTTP server types
//
// Command:
// $ goa gen goa.design/examples/encodings/design

package server

import (
	xml "goa.design/examples/encodings/gen/xml"
)

// ConvertRequestBody is the type of the "xml" service "convert" endpoint HTTP
// request body.
type ConvertRequestBody struct {
	// The name
	Name *string `xml:"Name,omitempty"`
	// The description
	Description *string `xml:"Description,omitempty"`
}

// ConvertResponseBody is the type of the "xml" service "convert" endpoint HTTP
// response body.
type ConvertResponseBody struct {
	Name        *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
}

// NewConvertResponseBody builds the HTTP response body from the result of the
// "convert" endpoint of the "xml" service.
func NewConvertResponseBody(res *xml.JSONObject) *ConvertResponseBody {
	body := &ConvertResponseBody{
		Name:        res.Name,
		Description: res.Description,
	}
	return body
}

// NewConvertPayload builds a xml service convert endpoint payload.
func NewConvertPayload(body *ConvertRequestBody) *xml.ConvertPayload {
	v := &xml.ConvertPayload{
		Name:        body.Name,
		Description: body.Description,
	}
	return v
}
