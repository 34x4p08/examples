// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// xml HTTP client types
//
// Command:
// $ goa gen goa.design/examples/encodings/design

package client

import (
	xml "goa.design/examples/encodings/gen/xml"
)

// ConvertRequestBody is the type of the "xml" service "convert" endpoint HTTP
// request body.
type ConvertRequestBody struct {
	// The name
	Name *string `xml:"Name,omitempty"`
	// The description
	Description *string `xml:"Description,omitempty"`
}

// ConvertResponseBody is the type of the "xml" service "convert" endpoint HTTP
// response body.
type ConvertResponseBody struct {
	Name        *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
}

// NewConvertRequestBody builds the HTTP request body from the payload of the
// "convert" endpoint of the "xml" service.
func NewConvertRequestBody(p *xml.ConvertPayload) *ConvertRequestBody {
	body := &ConvertRequestBody{
		Name:        p.Name,
		Description: p.Description,
	}
	return body
}

// NewConvertJSONObjectOK builds a "xml" service "convert" endpoint result from
// a HTTP "OK" response.
func NewConvertJSONObjectOK(body *ConvertResponseBody) *xml.JSONObject {
	v := &xml.JSONObject{
		Name:        body.Name,
		Description: body.Description,
	}
	return v
}
